package com.jin.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.jin.model.AuthorVO;
import com.jin.model.Criteria;
import com.jin.model.PageDTO;
import com.jin.service.AuthorService;

import lombok.extern.log4j.Log4j;

@Controller
@RequestMapping("/admin")
@Log4j
public class AdminController {
	
	@Autowired
	private AuthorService authorService;
	
	//관리자 메인 페이지 이동
	@RequestMapping(value="main", method = RequestMethod.GET)
	public void adminMainGET() throws Exception{
		
		log.info("관리자 페이지 이동");
	}
	
	//상품 관리 페이지 접속
	@RequestMapping(value="goodsManage", method = RequestMethod.GET)
	public void goodsManageGET() throws Exception{
		log.info("상품 관리 페이지 접속");
	}
	
	//상품 등록 페이지 접속
	@RequestMapping(value="goodsEnroll", method = RequestMethod.GET)
	public void goodsEnrollGET() throws Exception{
		log.info("상품 등록 페이지 접속");
	}
	
	//작가 관리 페이지 접속
	@RequestMapping(value="authorManage", method = RequestMethod.GET)
	public void authorManageGET(Criteria cri, Model model) throws Exception{
		log.info("작가 관리 페이지 접속..........." + cri);
		
		//작가 목록 출력 데이터
		List list = authorService.authorGetList(cri);
		
		model.addAttribute("list",list);
		
		//페이지 이동 인터페이스 데이터
		int total = authorService.authorGetTotal(cri);
		
		PageDTO pageMaker = new PageDTO(cri, total);
		
		model.addAttribute("pageMaker", pageMaker);
		
		
		//아래 코드로 한줄로 표현도 가능
		//model.addAttribute("pageMaker", new PageDTO(cri, authorService.authorGetTotal(cri)));
	}
	
	//작가 등록 페이지 접속
	@RequestMapping(value="authorEnroll", method = RequestMethod.GET)
	public void authorEnrollGET() throws Exception{
		log.info("작가 등록 페이지 접속");
	}
	
	//작가 등록
	@RequestMapping(value ="authorEnroll.do", method = RequestMethod.POST)
	public String authorEnrollPOST(AuthorVO author, RedirectAttributes rttr) throws Exception{
		
		log.info("authorEnroll : " + author);
		
		//작가등록 쿼리수행
		authorService.authorEnroll(author);
		
		rttr.addFlashAttribute("enroll_result", author.getAuthorName());	//등록 성공 메시지(작가이름)
		
		return "redirect:/admin/authorManage";
		
	}
	

}
